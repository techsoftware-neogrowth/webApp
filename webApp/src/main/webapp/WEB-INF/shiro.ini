# INI configuration is very powerful and flexible, while still remaining succinct.
# Please http://shiro.apache.org/configuration.html and
# http://shiro.apache.org/web.html for more.

[main]

# Let's use some in-memory caching to reduce the number of runtime lookups against user-store.  A real
# application might want to use a more robust caching solution (e.g. ehcache or a distributed cache).  When using such
# caches, be aware of your cache TTL settings: too high a TTL and the cache won't reflect any potential
# changes in user-store fast enough.  Too low and the cache could evict too often, reducing performance.

cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

# Setting up JDBC(MySQL user store)
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT user_pass from users where user_name = ?
jdbcRealm.userRolesQuery = select role_name from user_roles where user_id = (select user_id FROM users WHERE user_name = ?)

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
#ds.password = 
ds.databaseName = userstore
jdbcRealm.dataSource= $ds

authc.loginUrl = /login.jsp
user.loginUrl = /login.jsp

authc.usernameParam = username
authc.passwordParam = password
authc.rememberMeParam = rememberme

# redirect after successful login
authc.successUrl  = /user/home.jsp



passwordMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
#credentialsMatcher.storedCredentialsHexEncoded = true
#credentialsMatcher.hashIterations = 5000
jdbcRealm.credentialsMatcher = $credentialsMatcher


multipleroles = com.neogrowth.authorization.roles.MultipleRolesAuthorizationFilter



[urls]
# force ssl for login page
/login.jsp = authc
/logout.jsp = logout
/user/** = authc


/admin/** =  authc, user, roles[admin]
/partner/** =  authc, user, multipleroles["admin", "partner"]
/fos/** = user, multipleroles["admin", "fos"]



